python scripts/retrain.py  --bottleneck_dir=tf_files/bottleneck  --image_dir=tf_files/plantas --architecture mobilenet_1.0_224 --output_graph=tf_files/retrained_graph.pb --output_labels=tf_files/retrained_labels.txt


python -m scripts.label_image       --graph=tf_files/retrained_graph.pb      --image=tf_files/descarga.jp

python -m tensorflow.python.tools.optimize_for_inference --input=tf_files/retrained_graph.pb --output=tf_files/optimized_graph.pb --input_names="input" --output_names="final_result"

--------verificamos el modelo optimizado---------------
    python -m scripts.label_image \
      --graph=tf_files/retrained_graph.pb\
      --image=tf_files/descarga.jpg

    python -m scripts.label_image \
	  --graph=tf_files/optimized_graph.pb \
      --image=tf_files/descarga.jpg

mkdir tf_files/training_summaries/

-----matamos todos los procesos de tensor board----------------
pkill -f tensorboard
tensorboard --logdir tf_files/training_summaries &


--------agragamos graficos de tensorBoard-------------------
python -m scripts.graph_pb2tb tf_files/training_summaries/retrained \
  tf_files/retrained_graph.pb

python -m scripts.graph_pb2tb tf_files/training_summaries/optimized \
  tf_files/optimized_graph.pb

-----------comprimimos el modelo------------------
gzip -c tf_files/optimized_graph.pb > tf_files/optimized_graph.pb.gz

gzip -l tf_files/optimized_graph.pb.gz

















python -m scripts.quantize_graph \
--input=tf_files/optimized_graph.ph \
--output=tf_files/rounded_graph.ph \
--output_node_names=final_result \
--mode=weights_rounded

--------comprimimos este modelo----------
gzip -c tf_files/rounded_graph.ph > tf_files/rounded_graph.ph.gz

gzip -l tf_files/rounded_graph.ph.gz

------------comparamos las dos compresiones optimizado y rouded -------------------

    python -m scripts.label_image \
        --image=tf_files/descarga.jpg \
        --graph=tf_files/optimized_graph.ph

    python -m scripts.label_image \
		--image=tf_files/descarga.jpg \
		--graph=tf_files/rounded_graph.ph

----comporamos el rendimiento del modelo optimizado---------
python -m scripts.evaluate  tf_files/optimized_graph.pb
----comporamos el rendimiento del modelo rou--------